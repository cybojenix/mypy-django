# Stubs for django.contrib.gis.db.models.query (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from django.db.models.query import QuerySet

class GeoQuerySet(QuerySet):
    def area(self, tolerance: float = ..., **kwargs): ...
    def centroid(self, **kwargs): ...
    def collect(self, **kwargs): ...
    def difference(self, geom, **kwargs): ...
    def distance(self, geom, **kwargs): ...
    def envelope(self, **kwargs): ...
    def extent(self, **kwargs): ...
    def extent3d(self, **kwargs): ...
    def force_rhr(self, **kwargs): ...
    def geojson(self, precision: int = ..., crs: bool = ..., bbox: bool = ..., **kwargs): ...
    def geohash(self, precision: int = ..., **kwargs): ...
    def gml(self, precision: int = ..., version: int = ..., **kwargs): ...
    def intersection(self, geom, **kwargs): ...
    def kml(self, **kwargs): ...
    def length(self, **kwargs): ...
    def make_line(self, **kwargs): ...
    def mem_size(self, **kwargs): ...
    def num_geom(self, **kwargs): ...
    def num_points(self, **kwargs): ...
    def perimeter(self, **kwargs): ...
    def point_on_surface(self, **kwargs): ...
    def reverse_geom(self, **kwargs): ...
    def scale(self, x, y, z: float = ..., **kwargs): ...
    def snap_to_grid(self, *args, **kwargs): ...
    def svg(self, relative: bool = ..., precision: int = ..., **kwargs): ...
    def sym_difference(self, geom, **kwargs): ...
    def translate(self, x, y, z: float = ..., **kwargs): ...
    def transform(self, srid: int = ..., **kwargs): ...
    def union(self, geom, **kwargs): ...
    def unionagg(self, **kwargs): ...
