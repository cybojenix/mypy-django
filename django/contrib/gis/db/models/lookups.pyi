# Stubs for django.contrib.gis.db.models.lookups (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from django.db.models.lookups import Lookup

gis_lookups = ...  # type: Any

class GISLookup(Lookup):
    sql_template = ...  # type: Any
    transform_func = ...  # type: Any
    distance = ...  # type: bool
    def get_db_prep_lookup(self, value, connection): ...
    def process_rhs(self, compiler, connection): ...
    def get_rhs_op(self, connection, rhs): ...
    def as_sql(self, compiler, connection): ...

class OverlapsLeftLookup(GISLookup):
    lookup_name = ...  # type: str

class OverlapsRightLookup(GISLookup):
    lookup_name = ...  # type: str

class OverlapsBelowLookup(GISLookup):
    lookup_name = ...  # type: str

class OverlapsAboveLookup(GISLookup):
    lookup_name = ...  # type: str

class LeftLookup(GISLookup):
    lookup_name = ...  # type: str

class RightLookup(GISLookup):
    lookup_name = ...  # type: str

class StrictlyBelowLookup(GISLookup):
    lookup_name = ...  # type: str

class StrictlyAboveLookup(GISLookup):
    lookup_name = ...  # type: str

class SameAsLookup(GISLookup):
    lookup_name = ...  # type: str

class ExactLookup(SameAsLookup):
    lookup_name = ...  # type: str

class BBContainsLookup(GISLookup):
    lookup_name = ...  # type: str

class BBOverlapsLookup(GISLookup):
    lookup_name = ...  # type: str

class ContainedLookup(GISLookup):
    lookup_name = ...  # type: str

class ContainsLookup(GISLookup):
    lookup_name = ...  # type: str

class ContainsProperlyLookup(GISLookup):
    lookup_name = ...  # type: str

class CoveredByLookup(GISLookup):
    lookup_name = ...  # type: str

class CoversLookup(GISLookup):
    lookup_name = ...  # type: str

class CrossesLookup(GISLookup):
    lookup_name = ...  # type: str

class DisjointLookup(GISLookup):
    lookup_name = ...  # type: str

class EqualsLookup(GISLookup):
    lookup_name = ...  # type: str

class IntersectsLookup(GISLookup):
    lookup_name = ...  # type: str

class OverlapsLookup(GISLookup):
    lookup_name = ...  # type: str

class RelateLookup(GISLookup):
    lookup_name = ...  # type: str
    sql_template = ...  # type: str
    pattern_regex = ...  # type: Any
    def get_db_prep_lookup(self, value, connection): ...

class TouchesLookup(GISLookup):
    lookup_name = ...  # type: str

class WithinLookup(GISLookup):
    lookup_name = ...  # type: str

class DistanceLookupBase(GISLookup):
    distance = ...  # type: bool
    sql_template = ...  # type: str
    def get_db_prep_lookup(self, value, connection): ...

class DWithinLookup(DistanceLookupBase):
    lookup_name = ...  # type: str
    sql_template = ...  # type: str

class DistanceGTLookup(DistanceLookupBase):
    lookup_name = ...  # type: str

class DistanceGTELookup(DistanceLookupBase):
    lookup_name = ...  # type: str

class DistanceLTLookup(DistanceLookupBase):
    lookup_name = ...  # type: str

class DistanceLTELookup(DistanceLookupBase):
    lookup_name = ...  # type: str
